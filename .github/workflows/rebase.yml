name: Rebase Open PRs on Merge

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  rebase:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "vishnu4reddy"
          git config user.email "vishnureddy"

      - name: Install GitHub CLI
        run: |
          sudo apt-get install gh
        
      - name: Authenticate with GitHub CLI
        run: |
          gh auth login --with-token < $GITHUB_TOKEN

      - name: Get list of open PRs
        id: pr_list
        run: |
          prs=$(gh pr list --state open --json number,headRefName --jq '.[] | "\(.number) \(.headRefName)"')
          echo "Raw PR List: $prs"  # Output raw data for debugging
          echo "prs_list=$prs" >> $GITHUB_ENV  # Write to environment variable

      - name: Rebase each open PR
        run: |
          # Get the prs_list from the environment variable
          prs_list="${{ env.prs_list }}"
          echo "PR list: $prs_list"  # Print the PR list for debugging

          if [ -z "$prs_list" ]; then
            echo "No open PRs to rebase."
            exit 0  # Exit if no PRs are found
          fi

          # Process each PR
          IFS=$'\n' read -ra prs <<< "$prs_list"

          for pr in "${prs[@]}"
          do
            pr_number=$(echo $pr | awk '{print $1}')
            pr_branch=$(echo $pr | awk '{print $2}')
            
            echo "Rebasing PR #$pr_number ($pr_branch)"

            git fetch --all

            git checkout $pr_branch

            echo "Before rebase (PR $pr_number):"
            git log --oneline --decorate --graph

            # Rebase the PR branch onto the latest main
            git rebase origin/main || {
              echo "Rebase failed due to conflicts, skipping..."
              git rebase --skip
            }

            echo "After rebase (PR $pr_number):"
            git log --oneline --decorate --graph

            git push origin $pr_branch --force-with-lease
          done

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}






